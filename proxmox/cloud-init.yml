#cloud-config
users:
  - name: saho
    groups: [sudo]
    lock_passwd: false
    passwd: $6$rounds=4096$UWXEUsdlup8Lf/cm$nhrniSxvTaJJGaEJ/HxA2x7KRdFpSozT5YWMSudCXtJYosgoHzlD.ZozstFl/4Ev9Pih7rQAuh6R7wiOe2nQK0
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC2B8Ztuy5vnbGLZPY/Rot3VZVEBQ8Upwb+wuC85djpSSKpc5Pr38wVZVKyQ2nZEf7ioHKiJcSIOm/UhfuKUp8Jyl+bKByzjicHnCRbPY6l4HXXexpj+TuSVJ/ORR9/a+IIBzJnjdTMBzteU8iRSNgk0d6U8s6OIUqZjfq+ZjYMLNet4gzvzUgeudRtCIurwYms0OX5E8uYD1q11DAUuh0edALTAsgeI0aeNuVjwUANYE/4H4SKu/3evO1cjNPfxC46lVc2b+timO4GwvzbwRlgaA1qGmoQ03RxELXCjZysLkG1E3tjONZTwy2M9inrK+isSizEKqF8KtNejAfAN+pYMByfOYDCoBjqDAmys1zmHekg4n5dorUl6rqigqddb/vktegKuNhHSV8LSGRcORt0x4uISmUPJ56h+/IW4Kq191qzmwOgp9hjyMAflXg175P3gKTuDAXZppq98tKVRQe4DBogC5tFthKfSEZTtGcw98HlLS+/N/N4zUCUexBLZ1E= saho@DESKTOP-O12DSBC
package_upgrade: true
package_reboot_if_required: true
locale: fi_FI.utf8
timezone: Europe/Helsinki
# https://medium.com/@olorunfemikawonise_56441/simplifying-kubernetes-installation-on-ubuntu-using-a-bash-shell-script-d75fed68a31
runcmd:
  - |
    #2) Disable swap & add kernel settings

    swapoff -a
    sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    #3) Add  kernel settings & Enable IP tables(CNI Prerequisites)

    cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
    overlay
    br_netfilter
    EOF

    modprobe overlay
    modprobe br_netfilter

    cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1
    EOF

    sysctl --system

    #4) Install containerd run time

    #To install containerd, first install its dependencies.

    apt-get update -y
    apt-get install ca-certificates curl gnupg lsb-release -y

    #Note: We are not installing Docker Here.Since containerd.io package is part of docker apt repositories hence we added docker repository & it's key to download and install containerd.
    # Add Docker's official GPG key:
    sudo mkdir -p /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

    #Use following command to set up the repository:

    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    # Install containerd

    apt-get update -y
    apt-get install containerd.io -y

    # Generate default configuration file for containerd

    #Note: Containerd uses a configuration file located in /etc/containerd/config.toml for specifying daemon level options.
    #The default configuration can be generated via below command.

    containerd config default | sudo tee /etc/containerd/config.toml

    # Run following command to update configure cgroup as systemd for contianerd.

    sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    # Restart and enable containerd service

    systemctl restart containerd
    systemctl enable containerd

    #5) Installing kubeadm, kubelet and kubectl

    # Update the apt package index and install packages needed to use the Kubernetes apt repository:

    apt-get update
    apt-get install -y apt-transport-https ca-certificates curl

    # Download the Google Cloud public signing key:

    curl -fsSL https://dl.k8s.io/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg

    # Add the Kubernetes apt repository:

    echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

    # Update apt package index, install kubelet, kubeadm and kubectl, and pin their version:

    apt-get update
    apt-get install -y kubelet kubeadm kubectl

    # apt-mark hold will prevent the package from being automatically upgraded or removed.

    apt-mark hold kubelet kubeadm kubectl

    # Enable and start kubelet service

    systemctl daemon-reload
    systemctl start kubelet
    systemctl enable kubelet.service
