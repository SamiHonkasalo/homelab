- name: Wait for cloud-init to finish
  stat:
    path: /var/lib/cloud/instance/boot-finished
  ignore_errors: true
  ignore_unreachable: true
  retries: 10
  delay: 10
  register: boot_finished
  until: boot_finished.stat.exists
  changed_when: false

- name: Wait for connection, if cloud-init restarted the server
  wait_for_connection:
    timeout: 60
  changed_when: false

- name: Install ca-certificates and gnupg
  apt:
    name:
      - ca-certificates
      - gnupg
    update_cache: yes
  notify: Restart

# Longhorn requirements
- name: Install nfs-common and open-iscsi
  apt:
    name:
      - nfs-common
      - open-iscsi
  notify: Restart

- name: Set hostname
  hostname:
    name: "{{ hostname }}"

- name: Update hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '127\.0\.0\.1'
    line: "127.0.0.1 {{ hostname }}"

- name: Disable swap
  command: swapoff -a
  changed_when: false
  notify: Restart

- name: Disable swap permanently
  replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'
    backup: yes
  notify: Restart

- name: Install keyrings
  command: sudo install -m 0755 -d /etc/apt/keyrings
  changed_when: false
  notify: Restart

- name: Download docker GPG key
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
  notify: Restart

- name: Add docker apt repository
  apt_repository:
    repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
  notify: Restart

- name: Install containerd
  apt:
    name: containerd.io
    update_cache: yes
  notify: Restart
  register: install_containerd

- name: Create containerd directory
  file:
    path: /etc/containerd
    state: directory
  when: install_containerd.changed
  notify: Restart

- name: Get default containerd config
  command: containerd config default
  register: containerd_default_config
  when: install_containerd.changed
  notify: Restart

- name: Set default containerd config
  copy:
    content: "{{containerd_default_config.stdout}}"
    dest: /etc/containerd/config.toml
  when: install_containerd.changed
  notify: Restart

- name: Set SystemdCgroup to true
  replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup \= false'
    replace: "SystemdCgroup = true"
    backup: yes
  notify: Restart

- name: Enable overlay and br_netfilter
  blockinfile:
    path: /etc/modules-load.d/containerd.conf
    create: true
    block: |
      overlay
      br_netfilter
  notify: Restart

- name: Configure sysctl parameters
  blockinfile:
    path: /etc/sysctl.d/k8s.conf
    create: yes
    block: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
  notify: Restart

- name: Enable bridging
  replace:
    path: /etc/sysctl.conf
    regexp: "#net.ipv4.ip_forward=1"
    replace: net.ipv4.ip_forward=1
    backup: yes
  notify: Restart

- name: Download k8s GPG key
  get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
  notify: Restart

- name: Add k8s apt repository
  apt_repository:
    repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /
  notify: Restart

- name: Install k8s
  apt:
    name:
      - kubeadm=1.28.2*
      - kubectl=1.28.2*
      - kubelet=1.28.2*
    update_cache: yes
  notify: Restart

- name: Hold kubeadm
  dpkg_selections:
    name: kubeadm
    selection: hold
  notify: Restart

- name: Hold kubelet
  dpkg_selections:
    name: kubelet
    selection: hold
  notify: Restart

- name: Hold kubectl
  ansible.builtin.dpkg_selections:
    name: kubectl
    selection: hold
  notify: Restart
